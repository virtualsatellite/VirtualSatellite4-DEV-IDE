language: java

jdk:
- oraclejdk8
 
cache:
  directories:
  - $HOME/.m2

addons:
  # -----------------------------------------------------------
  # Make the sourceforge hosts known, thus ssh connections will
  # not ask to accept the finger print of the server
  # -----------------------------------------------------------
  ssh_known_hosts: frs.sourceforge.net
  # ---------------------------------------------------------------
  # Now use APT to install metacity, which is a window manager also 
  # needed for the SWTBOT UI tests
  # ---------------------------------------------------------------
  apt:
    packages:
    - metacity
    - ant

install:
- true

stages:
# ------------------------------------
# Just one stage, multiple stages 
# with maven overcomplicate the things
# ------------------------------------
- name: build-assemble-deploy

env:
  global:
  # -------------------------------
  # set the display for UI testing
  # -------------------------------
  - DISPLAY=:99.0
  # ---------------------------------------------
  # API Token for access to github
  # ---------------------------------------------
  - secure: "POYGzbPXLBDe2BsehzJ7QUZ4toQ1Pbi2VdH8ZTSN9zqipLbBVnsMghs7Zf80C+AK1nKbY2DPWHwaWR6LE3MRhA9X3xeyYgJ/53J4JeMw1ORYpavVXJC9t8d+fMVCJhALzjQYz7PmE4ba/MHgr/UnoeNL2v1M/9mUpMbfD490jPUdOQjqpy0/FvM5HhXcQEwexUPsNsR+DffVSSmJ62aXHPM2pgKYaH0pnY5OYwm4t7v7lp8GgQf+b163+rD2LyLIEeLiQ1msXAqaRSBznuu2wqi7N3ZC176i864fRHf8M4RYbWqA0BneCd0keAQJLvpcPBoyE1T0XKYvjz5JdjbuNDX1p4waLo7CnU+UJzuCQ5hnkrDm7YJhwQY007T2kudUTPl0dP0TeoJsDtz30vvBC82equJA5+0xPb1BvvDmdKFkfF7gOGh05qjhAo3TJ8D5CXXFmdPr9VApYv0zqzh0hR5p+5FHkDmKhzJ7xg4jpo04IXa8ztBCjoB4dyLnUDhyTABtA5/uoRuMA4I7nc25mKL6Z9fz8O8HadAInlJFXyodQOrvD68k2Bf9WJWreZMKcLJiOWQC0bbPNa6ABrRpiuzdUdWEpzNjJJYktmPl+JwHAJ4Fa3CHaNFILaLLC9Z3gtrdNT2+PkME8u0sfVWZ1nU4nNO9EGUItcBEFhkCnZE="

before_script:
  # --------------------------------------------------
  # Start the XVFB Service for ui testing as suggested
  # by the travis documentation
  # --------------------------------------------------
  - sh -e /etc/init.d/xvfb start
  # -----------------------------------
  # Startup the metacity window manager
  # -----------------------------------
  - metacity --sm-disable --replace 2> metacity.err &

jobs:
  include:
    # -----------------------------------------------------------
    # -----------------------------------------------------------
    # Here are the jobs for the assemble and deploy stage
    # -----------------------------------------------------------
    # --- The Job for feature branches only. Assemble the product, but don't deploy
    - stage: build-assemble-deploy
      if: branch NOT IN (integration, development, integration_snapshot, development_snapshot) AND NOT (tag =~ /^Release/)
      name: Build-Assemble-Deploy - Feature
      script:
      # -------------------------------------------------------
      # call the maven build and store the output in a log file
      # use this log file to analyze it for compiler warnings
      # -------------------------------------------------------
      - mvn clean compile -P development,target -B -V | tee maven.log
      - echo "Check for Maven Problems on Overtarget:"
      - (grep -n "\[\(WARN\|ERROR\)\]" maven.log || exit 0  && exit 1;)
      - mvn install -P development,deployUnsecured -B -V | tee maven.log
      - echo "Check for Maven Problems on Product:"
      - (grep -n "\[\(WARN\|WARNING\|ERROR\)\]" maven.log || exit 0  && exit 1;)

    # -----------------------------------------------------------
    # Deploy Jobs for unsecured Development.
    #------------------------------------------------------------
    - stage: build-assemble-deploy
      if: branch = development
      name: Build-Assemble-Deploy - Development
      script:
      # -------------------------------------------------------
      # call the maven build and store the output in a log file
      # use this log file to analyze it for compiler warnings
      # -------------------------------------------------------
      - mvn clean compile -P development,target -B -V | tee maven.log
      - echo "Check for Maven Problems on VirtualSatellite4-DEV-IDE:"
      - (grep -n "\[\(WARN\|ERROR\)\]" maven.log || exit 0  && exit 1;)
      - mvn install -P development,deployUnsecured -B -V | tee maven.log
      - echo "Check for Maven Problems on Product:"
      - (grep -n "\[\(WARN\|WARNING\|ERROR\)\]" maven.log || exit 0  && exit 1;)
      before_deploy:
        # -----------------------------------------------------------
        # Update the development tag beforehand
        # And send it back to the origin, otherwise travis will 
        # apparently perform a git fetch before, and overwrite the
        # moved tag back to the previous state.
        #------------------------------------------------------------
        - git tag -f development_snapshot
        - git remote add github-mtd  https://${GITHUB_API_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push -f github-mtd development_snapshot
        - git remote remove github-mtd
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the newly created tag.
        # release is attached to the tag on the current commit.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file:
        - deploy/unsecured/p2/**/zip/*_p2.zip
        - deploy/unsecured/bin/**/*.zip
        - deploy/unsecured/bin/**/*.tar.gz
        skip_cleanup: true
        name: Virtual Satellite 4 Dev Ide Build
        body: Development build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This release is subject to constant change.
        prerelease: true
        overwrite: true
        target_commitish: $TRAVIS_COMMIT
        on:
          repo: virtualsatellite/VirtualSatellite4-DEV-IDE
          branch: development
      
    # -----------------------------------------------------------
    # Deploy Jobs for unsecured Integration.
    #------------------------------------------------------------
    - stage: build-assemble-deploy
      if: branch = integration
      name: Build-Assemble-Deploy - Integration
      script:
      # -------------------------------------------------------
      # call the maven build and store the output in a log file
      # use this log file to analyze it for compiler warnings
      # -------------------------------------------------------
      - mvn clean compile -P development,target -B -V | tee maven.log
      - echo "Check for Maven Problems on VirtualSatellite4-DEV-IDE:"
      - (grep -n "\[\(WARN\|ERROR\)\]" maven.log || exit 0  && exit 1;)
      - mvn install -P integration,deployUnsecured -B -V | tee maven.log
      - echo "Check for Maven Problems on Product:"
      - (grep -n "\[\(WARN\|WARNING\|ERROR\)\]" maven.log || exit 0  && exit 1;)
      before_deploy:
        # -----------------------------------------------------------
        # Update the development tag beforehand
        # And send it back to the origin, otherwise travis will 
        # apparently perform a git fetch before, and overwrite the
        # moved tag back to the previous state.
        #------------------------------------------------------------
        - git tag -f integration_snapshot
        - git remote add github-mtd  https://${GITHUB_API_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push -f github-mtd integration_snapshot
        - git remote remove github-mtd
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the newly created tag.
        # release is attached to the tag on the current commit.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file: 
        - deploy/unsecured/p2/**/zip/*_p2.zip
        - deploy/unsecured/bin/**/*.zip
        - deploy/unsecured/bin/**/*.tar.gz
        skip_cleanup: true
        name: Virtual Satellite 4 Dev Ide Integration Build
        body: Integration build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This release is subject to constant change.
        prerelease: true
        overwrite: true
        target_commitish: $TRAVIS_COMMIT
        on:
          repo: virtualsatellite/VirtualSatellite4-DEV-IDE
          branch: integration
    
    # -----------------------------------------------------------
    # Deploy Jobs for secured Releases.
    #------------------------------------------------------------
    - stage: build-assemble-deploy
      if: tag =~ /^Release/
      name: Build-Assemble-Deploy - Release
      script:
      # -------------------------------------------------------
      # call the maven build and store the output in a log file
      # use this log file to analyze it for compiler warnings
      # -------------------------------------------------------
      - mvn clean compile -P development,target -B -V | tee maven.log
      - echo "Check for Maven Problems on VirtualSatellite4-DEV-IDE:"
      - (grep -n "\[\(WARN\|ERROR\)\]" maven.log || exit 0  && exit 1;)
      - mvn install -P release,deployBackuped -B -V | tee maven.log
      - echo "Check for Maven Problems on Product:"
      - (grep -n "\[\(WARN\|WARNING\|ERROR\)\]" maven.log || exit 0  && exit 1;)
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the Release Tag.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file: 
        - deploy/secured/p2/**/zip/*_p2.zip
        - deploy/secured/bin/**/*.zip
        - deploy/secured/bin/**/*.tar.gz
        skip_cleanup: true
        name: Virtual Satellite 4 Core Release Build
        body: Release build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This is a stable release.
        prerelease: true
        on:
          repo: virtualsatellite/VirtualSatellite4-DEV-IDE
          tags: true
                    